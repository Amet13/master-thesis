name: master-thesis

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1

    - name: Build docker image and push it to the registry
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        DOCKER_IMAGE_ORIGIN: "ghcr.io/amet13/master-thesis/docker-latex"
      run: |
        # Pull submodules
        git submodule init
        git submodule update --remote
        # Login to GitHub Packages and build Docker image
        docker login ghcr.io -u amet13 -p ${GITHUB_TOKEN}
        docker pull ${DOCKER_IMAGE_ORIGIN}:latest
        docker build -t ${DOCKER_IMAGE_ORIGIN}:${GITHUB_SHA} .
        # Generate PDF artifacts
        docker run --rm -i -v ${PWD}:/master-thesis:Z ${DOCKER_IMAGE_ORIGIN}:${GITHUB_SHA} \
          bash -c "latexmk -xelatex -synctex=1 -jobname=master-thesis main.tex"
        docker run --rm -i -v ${PWD}:/master-thesis:Z ${DOCKER_IMAGE_ORIGIN}:${GITHUB_SHA} \
          bash -c "cd presentation/ && latexmk -xelatex -synctex=1 -jobname=presentation main.tex"
        # Publish Docker image to GitHub Packages (with latest tag)
        docker tag ${DOCKER_IMAGE_ORIGIN}:${GITHUB_SHA} ${DOCKER_IMAGE_ORIGIN}:latest
        docker push ${DOCKER_IMAGE_ORIGIN}:${GITHUB_SHA}
        docker push ${DOCKER_IMAGE_ORIGIN}:latest

    - name: Create GitHub release with artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          master-thesis.pdf
          presentation/presentation.pdf
        name: "Build ${GITHUB_SHA}"
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
